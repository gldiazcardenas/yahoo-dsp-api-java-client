package io.github.gldiazcardenas.yahoodsp.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * @author Gabriel Diaz, Oct 06th 2022.
 */
public enum ReportMetricType {

    IMPRESSIONS(1),
    CLICKS(2),
    CTR(11),
    CONVERSION(23),
    START_VIEWS(25),
    COMPLETIONS_25(26),
    COMPLETIONS_50(27),
    COMPLETIONS_75(28),
    COMPLETIONS_100(29),
    DROP_RATE_AT_0(30),
    DROP_RATE_AT_25(31),
    DROP_RATE_AT_50(32),
    DROP_RATE_AT_75(33),
    CPC(41),
    CNVR(42),
    CPA(43),
    ADVERTISER_SPENDING(44),
    ADVERTISER_ECPM(45),
    PUBLISHER_EARNINGS(46),
    PUBLISHER_EARNINGS_PERCENTAGE(47),
    INVENTORY_ECPM(48),
    NETWORK_PROFIT(49),
    NETWORK_PROFIT_PERCENTAGE(50),
    NETWORK_ECPM(51),
    AVERAGE_FREQUENCY(53),
    COMPLETION_RATE_25(62),
    COMPLETION_RATE_50(63),
    COMPLETION_RATE_75(64),
    COMPLETION_RATE_100(65),
    YAHOO_MEASURABLE_IMPRESSIONS(100),
    YAHOO_VIEWABLE_IMPRESSIONS(101),
    YAHOO_VIEWABLE_RATE(102),
    NON_VIEWABLE_IMPRESSIONS(103),
    YAHOO_NON_MEASURABLE_IMPRESSIONS(104),
    YAHOO_MEASURABLE_RATE(105),
    IMPRESSION_DISTRIBUTION_VIEWABLE(106),
    IMPRESSION_DISTRIBUTION_NON_VIEWABLE(107),
    IMPRESSION_DISTRIBUTION_NON_MEASURABLE(108),
    VIEW_THROUGH_CONVERSION(109),
    CLICK_THROUGH_CONVERSION(110),
    VIEW_THROUGH_CONVERSION_RATE(111),
    CLICK_THROUGH_CONVERSION_RATE(112),
    VIEW_THROUGH_CPA(113),
    CLICK_THROUGH_CPA(114),
    UNIQUE_VIEWERS(115),
    SEAT_TECH_FEE(116),
    SEAT_DATA_FEE(117),
    SEAT_MANAGEMENT_FEE(129),
    FILTERED_IMPRESSIONS(134),
    FILTERED_CLICKS(135),
    CONVERSION_VALUE(137),
    ROAS(138),
    MOAT_VIEWABLE_RATE(163),
    MOAT_VIEWABLE_IMPRESSIONS(166),
    MOAT_MEASURABLE_IMPRESSIONS(167),
    VCPM(168),
    CPCV(169),
    CROSS_DEVICE_CONVERSIONS(171),
    QUALIFIED_BID_REQUESTS(173),
    YAHOO_DATA_FEES(180),
    THIRD_PARTY_DATA_FEES(184),
    ORDER_MANAGEMENT_FEE(188),
    AD_SERVING_COST(192),
    AD_VERIFICATION_COST(196),
    AUDIENCE_MEASUREMENT_COST(200),
    BRAND_SAFETY_COST(204),
    VIEWABILITY_COST(208),
    OTHER_COST(212),
    TOTAL_VARIABLE_COST(216),
    MOAT_IMPRESSIONS_ANALYZED(242),
    MOAT_AVOC(243),
    MOAT_AVFH(244),
    MOAT_MEASURABILITY_RATE(245),
    MOAT_AVOC_RATE(247),
    SKIPPED_ADS(249),
    BID_RESPONSES(254),
    TOTAL_VENDOR_FEE(260),
    BID_PRICE_WITHOUT_MULTIPLIER(296),
    BID_PRICE_WITHOUT_MULTIPLIER_ORDER_CURRENCY(298),
    MULTIPLIED_ECPM(301),
    BID_CPM(302),
    BID_CPM_ORDER_CURRENCY(304),
    DYNAMIC_CONVERSION_VALUE(305),
    VERY_FIRST_CONVERSION(317),
    MOAT_GROUPM_VIEWABILITY_RATE(318),
    UNIQUE_CONVERTERS(319),
    UNIQUE_CLICK_THROUGH_CONVERTERS(320),
    UNIQUE_VIEW_THROUGH_CONVERTERS(321),
    PROGRAMMATIC_GUARANTEED_DEAL_FEE(322),
    AUDIENCE_IMPRESSIONS(329),
    DATA_FEE_TAX(330),
    INVENTORY_COST_TAX(334),
    MANAGEMENT_FEE_TAX(338),
    VENDOR_FEE_TAX(346),
    TOTAL_TAX(350),
    COST_PER_VALID_VIDEO_VIEW_CPV(365),
    BID_PRICE_WITHOUT_MULTIPLIER_ADVERTISER_CURRENCY(371),
    BID_PRICE_WITHOUT_MULTIPLIER_SEAT_CURRENCY(373),
    BID_CPM_ADVERTISER_CURRENCY(375),
    BID_CPM_SEAT_CURRENCY(377),
    BID_SHADING_COST_SAVINGS(382),
    COMPANION_IMPRESSIONS(386),
    COMPANION_CLICKS(387),
    MAIL_AD_OPENS(390),
    MAIL_AD_FORM_SUBMITS(391),
    MAIL_AD_SAVES(392),
    MAIL_AD_FORWARDS(393),
    MAIL_AD_CLICK_OUTS(394),
    MAIL_AD_SUBMIT_RATE(395),
    MAIL_AD_SAVES_RATE(396),
    MAIL_AD_FORWARD_RATE(397),
    MAIL_AD_CLICK_OUTS_RATE(398),
    FILTERED_COMPANION_IMPRESSIONS(399),
    FILTERED_COMPANION_CLICKS(400),
    ESTIMATED_BILLABLE_AMOUNT(426),
    UNIQUE_PEOPLE(430),
    CONVERTERS_BY_PEOPLE(431),
    CLICK_THROUGH_CONVERTERS_BY_PEOPLE(432),
    VIEW_THROUGH_CONVERTERS_BY_PEOPLE(433),
    ESTIMATED_TUNE_INS(437),
    ESTIMATED_TV_VIEWERS(439),
    COST_PER_TUNE_IN(441),
    UNIQUE_HOUSEHOLDS(446),
    AVERAGE_FREQUENCY_PER_HOUSEHOLD(447),
    AVERAGE_IMPRESSION_MULTIPLIER(448),
    ESTIMATED_NUMBER_OF_STORE_VISITS(453),
    ESTIMATED_UNIQUE_STORE_VISITORS(455),
    ESTIMATED_STORE_VISIT_THROUGH_RATE(456),
    ESTIMATED_COST_PER_STORE_VISIT(457),
    VERY_FIRST_VIEW_THROUGH_CONVERSION(461),
    VERY_FIRST_CLICK_THROUGH_CONVERSION(462),
    VERY_FIRST_VIEW_THROUGH_CPA(463),
    VERY_FIRST_CLICK_THROUGH_CPA(464),
    VIEW_THROUGH_DYNAMIC_CONVERSION_VALUE(465),
    VIEW_THROUGH_DYNAMIC_CONVERSION_ROAS(466),
    CLICK_THROUGH_DYNAMIC_CONVERSION_VALUE(467),
    CLICK_THROUGH_DYNAMIC_CONVERSION_ROAS(468),
    VIEW_THROUGH_CONVERSION_VALUES(469),
    VIEW_THROUGH_ROAS(470),
    CLICK_THROUGH_CONVERSION_VALUE(471),
    CLICK_THROUGH_ROAS(472),
    VERY_FIRST_VIEW_THROUGH_CONVERSION_VALUE(473),
    VERY_FIRST_VIEW_THROUGH_ROAS(474),
    VERY_FIRST_CLICK_THROUGH_CONVERSION_VALUE(475),
    VERY_FIRST_CLICK_THROUGH_ROAS(476),
    AVERAGE_PEOPLE_FREQUENCY(523),
    YAHOO_DEMO_FEE(560),
    YAHOO_SEGMENT_FEE(564),
    THIRD_PARTY_SEGMENT_FEE(570),
    AVAILABLE_BID_REQUESTS(583),
    AVERAGE_WIN_RATE(584),
    TILE_IMPRESSIONS(619),
    TILE_CLICK_OUTS(624);
    private final int id;

    ReportMetricType(int id) {
        this.id = id;
    }

    @JsonValue
    public int getId() {
        return id;
    }

    @JsonCreator
    public static ReportMetricType fromId(int id) {
        for (ReportMetricType type : values()) {
            if (type.id == id) {
                return type;
            }
        }
        throw new UnsupportedOperationException("dimensionTypeId not supported: " + id);
    }

}
